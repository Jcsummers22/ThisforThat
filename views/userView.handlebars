<nav>
<div class="nav-wrapper">
<a class="brand-logo swap left">ThisforThat</a>
<ul id="nav-mobile" class="right">
    <li class="search">
      <div class="nav-wrapper">
            <form method="GET">
              <div class="input-field">
                <input name="item_name" id="search_item" type="search" placeholder="search item!"required>
                <button type="submit">search</button>
                
              </div>
            </form>
          </div>
    <li><a id="logout" href="#">Logout</a></li>
    </li>
</ul>
</div>
</nav>
<main>

<div class="container" id="main-container">
<div class="row">






<div class="col-md" id="search_item">
  <!-- Pass in data from server.js -->
  <ul class="list-group">
    {{#each items}} 
    <span class="label" id={{this.id}}>{{this.id}}.  {{this.item_name}}</span>
    
    <!--{{#unless devoured}} {{> burgers/burgerNotDevoured-block}} {{/unless}} -->
    {{/each}}
  </ul>
</div>





  
   

</div>
</div>








</div>

</main>

<footer class="page-footer blue" id="page-footer">
<div class="container">
  <div class="row">
  </div>
</div>
<div class="footer-copyright pinkT">
  <div class="container">
  </div>
</div>
</footer>


<!--Import jQuery before materialize.js-->
<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script type="text/javascript" src="../js/materialize.js"></script>
<script src="../js/app.js"></script>
<script type="text/javascript">
$(document).ready(function(){


  $("#search_input").on("submit", function (event) {
    event.preventDefault();

    var item_search = {
      item_name: $("#search_item").val().trim()
    };

    $.ajax("/api/itemSearch", {
      type: "GET",
      data: item_search
    }).then(
      function () {
        // This console.log shows up in the browser's console for
        // a split second. Because of location.reload(), the 
        // logged message disappears instantly
        console.log("Created a new burger.");
        // Reload the page to get the updated list
        location.reload();
      }
      );
  });



  /*var $search_container = $("#search_container")

    var items = [];

    getItems();

  function initializeRows(){
    $search_container.empty();
    var rowsToAdd = [];
    for (var i = 0; i < items.length; i++){
      rowsToAdd.push(createNewRow(items[i]))
    }
    $search_container.prepend(rowsToAdd);
  }

  function getItems(){
    $.get("/api/items", function(data){
      items = data;
      initializeRows();
    });
  }

  function createNewRow(item) {
      var $newInputRow = $(
        [
          "<li class='list-group-item todo-item'>",
          "<span>",
          item.text,
          "</span>",
          "<input type='text' class='edit' style='display: none;'>",
          "</li>"
        ].join("")
      );
      $newInputRow.find("input.edit").css("display", "none");
      $newInputRow.data("todo", todo);
      return $newInputRow;
    }


    var url = window.location.search;
    var itemId;
    if (url.indexOf("?item_name=") !== -1) {
      itemId = url.split("=")[1];
      getItems(itemId);
    }
    // If there's no authorId we just get all posts as usual
    else {
      getItems();
    }

    function getitems(item) {
    itemId = item || "";
    if (itemId) {
      itemId = "/?item_name=" + itemId
    }
    $.get("/api/items" + itemId, function (data) {
      console.log("items", data);
      items = data;
      if (!items || !items.length) {
        displayEmpty(items);
      }
      else {
        initializeRows();
      }
    });
  }


  $("#logout").click(function(event){
      event.preventDefault();
     
      var currentURL = window.location.origin;
      $.get(currentURL + "/logout").then(function(){
        window.location = "/";
      });
  });

  $("#search").on("click", function(event){
    event.preventDefault();
    var userSearch = {
      item_name: $('#item_name').val().trim(),
    }
  $.ajax("/api/items", {
      method: "GET",
      data: userSearch, dataType: "json"
    }).done(
      function () {
        console.log("created new item");
        // Reload the page to get the updated list
        location.reload();

  });



}); */
});
</script>
